
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: datasets.data.modeld.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=="Ready")].status
    name: Ready
    type: string
  - JSONPath: .spec.versionName
    name: Version
    type: string
  - JSONPath: .spec.schemaName
    name: Schema
    type: string
  - JSONPath: .status.phase
    name: Status
    type: string
  - JSONPath: .status.statistics.rows
    name: Rows
    type: integer
  - JSONPath: .status.statistics.cols
    name: Columns
    type: integer
  - JSONPath: .status.statistics.fileSize
    name: Size
    type: integer
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  group: data.modeld.io
  names:
    categories:
    - data
    - modeld
    - all
    kind: Dataset
    plural: datasets
    shortNames:
    - ds
    singular: dataset
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Dataset represents a single batch of data
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          description: ObjectMeta is metadata that all persisted resources must have,
            which includes all objects users must create.
          properties:
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with
                a resource that may be set by external tools to store and retrieve
                arbitrary metadata. They are not queryable and should be preserved
                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
            clusterName:
              description: The name of the cluster which the object belongs to. This
                is used to distinguish resources with same name and namespace in different
                clusters. This field is not set anywhere right now and apiserver is
                going to ignore it if set in create or update request.
              type: string
            creationTimestamp:
              description: "CreationTimestamp is a timestamp representing the server
                time when this object was created. It is not guaranteed to be set
                in happens-before order across separate operations. Clients may not
                set this value. It is represented in RFC3339 form and is in UTC. \n
                Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
              format: date-time
              type: string
            deletionGracePeriodSeconds:
              description: Number of seconds allowed for this object to gracefully
                terminate before it will be removed from the system. Only set when
                deletionTimestamp is also set. May only be shortened. Read-only.
              format: int64
              type: integer
            deletionTimestamp:
              description: "DeletionTimestamp is RFC 3339 date and time at which this
                resource will be deleted. This field is set by the server when a graceful
                deletion is requested by the user, and is not directly settable by
                a client. The resource is expected to be deleted (no longer visible
                from resource lists, and not reachable by name) after the time in
                this field, once the finalizers list is empty. As long as the finalizers
                list contains items, deletion is blocked. Once the deletionTimestamp
                is set, this value may not be unset or be set further into the future,
                although it may be shortened or the resource may be deleted prior
                to this time. For example, a user may request that a pod is deleted
                in 30 seconds. The Kubelet will react by sending a graceful termination
                signal to the containers in the pod. After that 30 seconds, the Kubelet
                will send a hard termination signal (SIGKILL) to the container and
                after cleanup, remove the pod from the API. In the presence of network
                partitions, this object may still exist after this timestamp, until
                an administrator or automated process can determine the resource is
                fully terminated. If not set, graceful deletion of the object has
                not been requested. \n Populated by the system when a graceful deletion
                is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
              format: date-time
              type: string
            finalizers:
              description: Must be empty before the object is deleted from the registry.
                Each entry is an identifier for the responsible component that will
                remove the entry from the list. If the deletionTimestamp of the object
                is non-nil, entries in this list can only be removed. Finalizers may
                be processed and removed in any order.  Order is NOT enforced because
                it introduces significant risk of stuck finalizers. finalizers is
                a shared field, any actor with permission can reorder it. If the finalizer
                list is processed in order, then this can lead to a situation in which
                the component responsible for the first finalizer in the list is waiting
                for a signal (field value, external system, or other) produced by
                a component responsible for a finalizer later in the list, resulting
                in a deadlock. Without enforced ordering finalizers are free to order
                amongst themselves and are not vulnerable to ordering changes in the
                list.
              items:
                type: string
              type: array
            generateName:
              description: "GenerateName is an optional prefix, used by the server,
                to generate a unique name ONLY IF the Name field has not been provided.
                If this field is used, the name returned to the client will be different
                than the name passed. This value will also be combined with a unique
                suffix. The provided value has the same validation rules as the Name
                field, and may be truncated by the length of the suffix required to
                make the value unique on the server. \n If this field is specified
                and the generated name exists, the server will NOT return a 409 -
                instead, it will either return 201 Created or 500 with Reason ServerTimeout
                indicating a unique name could not be found in the time allotted,
                and the client should retry (optionally after the time indicated in
                the Retry-After header). \n Applied only if Name is not specified.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency"
              type: string
            generation:
              description: A sequence number representing a specific generation of
                the desired state. Populated by the system. Read-only.
              format: int64
              type: integer
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize
                and categorize (scope and select) objects. May match selectors of
                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            managedFields:
              description: ManagedFields maps workflow-id and version to the set of
                fields that are managed by that workflow. This is mostly for internal
                housekeeping, and users typically shouldn't need to set or understand
                this field. A workflow can be the user's name, a controller's name,
                or the name of a specific apply path like "ci-cd". The set of fields
                is always in the version that the workflow used when modifying the
                object.
              items:
                description: ManagedFieldsEntry is a workflow-id, a FieldSet and the
                  group version of the resource that the fieldset applies to.
                properties:
                  apiVersion:
                    description: APIVersion defines the version of this resource that
                      this field set applies to. The format is "group/version" just
                      like the top-level APIVersion field. It is necessary to track
                      the version of a field set because it cannot be automatically
                      converted.
                    type: string
                  fieldsType:
                    description: 'FieldsType is the discriminator for the different
                      fields format and version. There is currently only one possible
                      value: "FieldsV1"'
                    type: string
                  fieldsV1:
                    description: FieldsV1 holds the first JSON version format as described
                      in the "FieldsV1" type.
                    type: object
                  manager:
                    description: Manager is an identifier of the workflow managing
                      these fields.
                    type: string
                  operation:
                    description: Operation is the type of operation which lead to
                      this ManagedFieldsEntry being created. The only valid values
                      for this field are 'Apply' and 'Update'.
                    type: string
                  time:
                    description: Time is timestamp of when these fields were set.
                      It should always be empty if Operation is 'Apply'
                    format: date-time
                    type: string
                type: object
              type: array
            name:
              description: 'Name must be unique within a namespace. Is required when
                creating resources, although some resources may allow a client to
                request the generation of an appropriate name automatically. Name
                is primarily intended for creation idempotence and configuration definition.
                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            namespace:
              description: "Namespace defines the space within each name must be unique.
                An empty namespace is equivalent to the \"default\" namespace, but
                \"default\" is the canonical representation. Not all objects are required
                to be scoped to a namespace - the value of this field for those objects
                will be empty. \n Must be a DNS_LABEL. Cannot be updated. More info:
                http://kubernetes.io/docs/user-guide/namespaces"
              type: string
            ownerReferences:
              description: List of objects depended by this object. If ALL objects
                in the list have been deleted, this object will be garbage collected.
                If this object is managed by a controller, then an entry in this list
                will point to this controller, with the controller field set to true.
                There cannot be more than one managing controller.
              items:
                description: OwnerReference contains enough information to let you
                  identify an owning object. An owning object must be in the same
                  namespace as the dependent, or be cluster-scoped, so there is no
                  namespace field.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  blockOwnerDeletion:
                    description: If true, AND if the owner has the "foregroundDeletion"
                      finalizer, then the owner cannot be deleted from the key-value
                      store until this reference is removed. Defaults to false. To
                      set this field, a user needs "delete" permission of the owner,
                      otherwise 422 (Unprocessable Entity) will be returned.
                    type: boolean
                  controller:
                    description: If true, this reference points to the managing controller.
                    type: boolean
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                    type: string
                required:
                - apiVersion
                - kind
                - name
                - uid
                type: object
              type: array
            resourceVersion:
              description: "An opaque value that represents the internal version of
                this object that can be used by clients to determine when objects
                have changed. May be used for optimistic concurrency, change detection,
                and the watch operation on a resource or set of resources. Clients
                must treat these values as opaque and passed unmodified back to the
                server. They may only be valid for a particular resource or set of
                resources. \n Populated by the system. Read-only. Value must be treated
                as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
              type: string
            selfLink:
              description: "SelfLink is a URL representing this object. Populated
                by the system. Read-only. \n DEPRECATED Kubernetes will stop propagating
                this field in 1.20 release and the field is planned to be removed
                in 1.21 release."
              type: string
            uid:
              description: "UID is the unique in time and space value for this object.
                It is typically generated by the server on successful creation of
                a resource and is not allowed to change on PUT operations. \n Populated
                by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
              type: string
          type: object
        spec:
          description: DatasetSpec defines the desired state of a dataset
          properties:
            archive:
              description: Folder of the actual archive data ref.
              properties:
                data:
                  description: Data to the full data file (e.g. csv file).
                  type: string
                holdout:
                  description: Pointer to the validation
                  type: string
                labels:
                  description: The location of the labels file (If exist)
                  type: string
                test:
                  description: the location of the training data, if different from
                    the data.
                  type: string
                train:
                  description: path to the training set
                  type: string
              required:
              - data
              - train
              type: object
            datasourceName:
              description: DataSourceName is the name of the data source which created
                this dataset. For example flat file
              maxLength: 256
              minLength: 1
              type: string
            description:
              description: User provided description
              maxLength: 512
              type: string
            holdout:
              description: The % of the dataset allocated to holdout set. By default
                10%
              format: int32
              type: integer
            labeled:
              description: Labeled indicates if this dataset is labeled or not.
              type: boolean
            raw:
              description: Folder of the actual data resides.
              properties:
                data:
                  description: Data to the full data file (e.g. csv file).
                  type: string
                holdout:
                  description: Pointer to the validation
                  type: string
                labels:
                  description: The location of the labels file (If exist)
                  type: string
                test:
                  description: the location of the training data, if different from
                    the data.
                  type: string
                train:
                  description: path to the training set
                  type: string
              required:
              - data
              - train
              type: object
            report:
              description: If true, a dataset report should be generated for this
                dataset. Default is false
              type: boolean
            rows:
              description: Rows denotes how many rows in case where we need to generate
                the dataset Default is 0.
              format: int32
              type: integer
            schemaName:
              description: SchemaName is the schema of this dataset
              maxLength: 256
              type: string
            source:
              description: Define the source data. The operator will copy the data
                from this location into the live location. Raw is initially uploaded
                to this location.
              properties:
                data:
                  description: Data to the full data file (e.g. csv file).
                  type: string
                holdout:
                  description: Pointer to the validation
                  type: string
                labels:
                  description: The location of the labels file (If exist)
                  type: string
                test:
                  description: the location of the training data, if different from
                    the data.
                  type: string
                train:
                  description: path to the training set
                  type: string
              required:
              - data
              - train
              type: object
            stratify:
              description: Do we do stratify split. By default is true.
              type: boolean
            synthetic:
              description: Synthetic denotes if the data should be generated. Default
                is false
              type: boolean
            test:
              description: The % of the dataset allocated to the test set By default
                10%
              format: int32
              type: integer
            train:
              description: The % of the dataset allocated to training set By default
                80%
              format: int32
              type: integer
            validate:
              description: If true, we should validate the dataset Default is true
              type: boolean
            versionName:
              description: VersionName is the data product version of the dataset
                required.
              type: string
          type: object
        status:
          description: DatasetStatus defines the observed state of Dataset
          properties:
            conditions:
              description: Represents the latest available observations of a dataset
                state.
              items:
                description: DatasetCondition describes the state of a dataset at
                  a certain point.
                properties:
                  lastTransitionTime:
                    description: Last time the condition transitioned from one status
                      to another.
                    format: date-time
                    type: string
                  message:
                    description: A human readable message indicating details about
                      the transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, AutoScaler.
                    type: string
                  type:
                    description: Condition on the dataset
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            error:
              description: Error during reconciliation
              properties:
                message:
                  description: error message
                  type: string
                occurredAt:
                  description: time of error
                  format: date-time
                  type: string
              type: object
            imbalanced:
              description: Based on the actual data, treat this dataset as imbalanced
              type: boolean
            phase:
              description: The phase of the dataset processing
              type: string
            profileUri:
              description: A reference to the visualization uri which were produce
                during processing
              type: string
            reportName:
              description: Reference to the report object that was generated for the
                dataset
              type: string
            statistics:
              description: Statistics for the dataset. The statistics contain information
                about each column.
              properties:
                cols:
                  description: number of columns, used mainly to show the columns
                    in the kubectl
                  format: int32
                  type: integer
                columns:
                  description: Columns contain the collection of statistics for each
                    attribute
                  items:
                    description: Hold the statistical parameters about a single attribute
                    properties:
                      distinc:
                        format: int32
                        type: integer
                      importance:
                        description: The feature importance
                        format: float
                        type: number
                      invalid:
                        description: The number of invalid values
                        format: int32
                        type: integer
                      kurtosis:
                        description: Kurtosis is the standard deviation value of the
                          attribute
                        format: float
                        type: number
                      max:
                        description: Max is the maximum value of the attribute
                        format: float
                        type: number
                      mean:
                        description: Mean is the mean value of the attribute
                        format: float
                        type: number
                      min:
                        description: Min is the minimum value of the attribute
                        format: float
                        type: number
                      missing:
                        description: The number of missing values
                        format: int32
                        type: integer
                      name:
                        description: Name is the name of the column
                        type: string
                      p25:
                        description: Pct25 is the 25 precent point
                        format: float
                        type: number
                      p50:
                        description: Pct50 is the median
                        format: float
                        type: number
                      p75:
                        description: Pct75 is the 75% point
                        format: float
                        type: number
                      skewness:
                        description: Skewness is the standard deviation value of the
                          attribute
                        format: float
                        type: number
                      stddev:
                        description: StdDev is the standard deviation value of the
                          attribute
                        format: float
                        type: number
                      target:
                        description: Is this the target attribute.
                        type: boolean
                      zeros:
                        description: Zeros is the numbers of zeros in the feature
                        format: float
                        type: number
                    type: object
                  type: array
                fileSize:
                  description: file size in bytes
                  format: int32
                  type: integer
                rows:
                  description: number of rows in the dataset
                  format: int32
                  type: integer
              type: object
          type: object
      required:
      - metadata
      - spec
      type: object
  versions:
  - name: v1alpha1
    served: true
    storage: true
