
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: models.training.modeld.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=="Ready")].status
    name: Ready
    type: string
  - JSONPath: .spec.versionName
    name: Version
    type: string
  - JSONPath: .spec.studyName
    name: Study
    type: string
  - JSONPath: .spec.task
    name: Task
    type: string
  - JSONPath: .spec.classical.algorithmRef.name
    name: Algorithm
    type: string
  - JSONPath: .spec.objective
    name: Objective
    type: string
  - JSONPath: .status.cvScore
    name: CV Score
    type: number
  - JSONPath: .status.trainScore
    name: Train Score
    type: number
  - JSONPath: .status.testScore
    name: Test Score
    type: number
  - JSONPath: .status.best
    name: Best
    type: boolean
  - JSONPath: .status.phase
    name: Status
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  group: training.modeld.io
  names:
    categories:
    - training
    - modeld
    - all
    kind: Model
    plural: models
    shortNames:
    - md
    singular: model
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Model is the data structure for a PublishedModelRef resource. models
        are automatically generated by the planner and trained by the trainer. After
        training, models are packaged into a docker container and served by predictor.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          description: ObjectMeta is metadata that all persisted resources must have,
            which includes all objects users must create.
          properties:
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with
                a resource that may be set by external tools to store and retrieve
                arbitrary metadata. They are not queryable and should be preserved
                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
            clusterName:
              description: The name of the cluster which the object belongs to. This
                is used to distinguish resources with same name and namespace in different
                clusters. This field is not set anywhere right now and apiserver is
                going to ignore it if set in create or update request.
              type: string
            creationTimestamp:
              description: "CreationTimestamp is a timestamp representing the server
                time when this object was created. It is not guaranteed to be set
                in happens-before order across separate operations. Clients may not
                set this value. It is represented in RFC3339 form and is in UTC. \n
                Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
              format: date-time
              type: string
            deletionGracePeriodSeconds:
              description: Number of seconds allowed for this object to gracefully
                terminate before it will be removed from the system. Only set when
                deletionTimestamp is also set. May only be shortened. Read-only.
              format: int64
              type: integer
            deletionTimestamp:
              description: "DeletionTimestamp is RFC 3339 date and time at which this
                resource will be deleted. This field is set by the server when a graceful
                deletion is requested by the user, and is not directly settable by
                a client. The resource is expected to be deleted (no longer visible
                from resource lists, and not reachable by name) after the time in
                this field, once the finalizers list is empty. As long as the finalizers
                list contains items, deletion is blocked. Once the deletionTimestamp
                is set, this value may not be unset or be set further into the future,
                although it may be shortened or the resource may be deleted prior
                to this time. For example, a user may request that a pod is deleted
                in 30 seconds. The Kubelet will react by sending a graceful termination
                signal to the containers in the pod. After that 30 seconds, the Kubelet
                will send a hard termination signal (SIGKILL) to the container and
                after cleanup, remove the pod from the API. In the presence of network
                partitions, this object may still exist after this timestamp, until
                an administrator or automated process can determine the resource is
                fully terminated. If not set, graceful deletion of the object has
                not been requested. \n Populated by the system when a graceful deletion
                is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
              format: date-time
              type: string
            finalizers:
              description: Must be empty before the object is deleted from the registry.
                Each entry is an identifier for the responsible component that will
                remove the entry from the list. If the deletionTimestamp of the object
                is non-nil, entries in this list can only be removed. Finalizers may
                be processed and removed in any order.  Order is NOT enforced because
                it introduces significant risk of stuck finalizers. finalizers is
                a shared field, any actor with permission can reorder it. If the finalizer
                list is processed in order, then this can lead to a situation in which
                the component responsible for the first finalizer in the list is waiting
                for a signal (field value, external system, or other) produced by
                a component responsible for a finalizer later in the list, resulting
                in a deadlock. Without enforced ordering finalizers are free to order
                amongst themselves and are not vulnerable to ordering changes in the
                list.
              items:
                type: string
              type: array
            generateName:
              description: "GenerateName is an optional prefix, used by the server,
                to generate a unique name ONLY IF the Name field has not been provided.
                If this field is used, the name returned to the client will be different
                than the name passed. This value will also be combined with a unique
                suffix. The provided value has the same validation rules as the Name
                field, and may be truncated by the length of the suffix required to
                make the value unique on the server. \n If this field is specified
                and the generated name exists, the server will NOT return a 409 -
                instead, it will either return 201 Created or 500 with Reason ServerTimeout
                indicating a unique name could not be found in the time allotted,
                and the client should retry (optionally after the time indicated in
                the Retry-After header). \n Applied only if Name is not specified.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency"
              type: string
            generation:
              description: A sequence number representing a specific generation of
                the desired state. Populated by the system. Read-only.
              format: int64
              type: integer
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize
                and categorize (scope and select) objects. May match selectors of
                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            managedFields:
              description: ManagedFields maps workflow-id and version to the set of
                fields that are managed by that workflow. This is mostly for internal
                housekeeping, and users typically shouldn't need to set or understand
                this field. A workflow can be the user's name, a controller's name,
                or the name of a specific apply path like "ci-cd". The set of fields
                is always in the version that the workflow used when modifying the
                object.
              items:
                description: ManagedFieldsEntry is a workflow-id, a FieldSet and the
                  group version of the resource that the fieldset applies to.
                properties:
                  apiVersion:
                    description: APIVersion defines the version of this resource that
                      this field set applies to. The format is "group/version" just
                      like the top-level APIVersion field. It is necessary to track
                      the version of a field set because it cannot be automatically
                      converted.
                    type: string
                  fieldsType:
                    description: 'FieldsType is the discriminator for the different
                      fields format and version. There is currently only one possible
                      value: "FieldsV1"'
                    type: string
                  fieldsV1:
                    description: FieldsV1 holds the first JSON version format as described
                      in the "FieldsV1" type.
                    type: object
                  manager:
                    description: Manager is an identifier of the workflow managing
                      these fields.
                    type: string
                  operation:
                    description: Operation is the type of operation which lead to
                      this ManagedFieldsEntry being created. The only valid values
                      for this field are 'Apply' and 'Update'.
                    type: string
                  time:
                    description: Time is timestamp of when these fields were set.
                      It should always be empty if Operation is 'Apply'
                    format: date-time
                    type: string
                type: object
              type: array
            name:
              description: 'Name must be unique within a namespace. Is required when
                creating resources, although some resources may allow a client to
                request the generation of an appropriate name automatically. Name
                is primarily intended for creation idempotence and configuration definition.
                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            namespace:
              description: "Namespace defines the space within each name must be unique.
                An empty namespace is equivalent to the \"default\" namespace, but
                \"default\" is the canonical representation. Not all objects are required
                to be scoped to a namespace - the value of this field for those objects
                will be empty. \n Must be a DNS_LABEL. Cannot be updated. More info:
                http://kubernetes.io/docs/user-guide/namespaces"
              type: string
            ownerReferences:
              description: List of objects depended by this object. If ALL objects
                in the list have been deleted, this object will be garbage collected.
                If this object is managed by a controller, then an entry in this list
                will point to this controller, with the controller field set to true.
                There cannot be more than one managing controller.
              items:
                description: OwnerReference contains enough information to let you
                  identify an owning object. An owning object must be in the same
                  namespace as the dependent, or be cluster-scoped, so there is no
                  namespace field.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  blockOwnerDeletion:
                    description: If true, AND if the owner has the "foregroundDeletion"
                      finalizer, then the owner cannot be deleted from the key-value
                      store until this reference is removed. Defaults to false. To
                      set this field, a user needs "delete" permission of the owner,
                      otherwise 422 (Unprocessable Entity) will be returned.
                    type: boolean
                  controller:
                    description: If true, this reference points to the managing controller.
                    type: boolean
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                    type: string
                required:
                - apiVersion
                - kind
                - name
                - uid
                type: object
              type: array
            resourceVersion:
              description: "An opaque value that represents the internal version of
                this object that can be used by clients to determine when objects
                have changed. May be used for optimistic concurrency, change detection,
                and the watch operation on a resource or set of resources. Clients
                must treat these values as opaque and passed unmodified back to the
                server. They may only be valid for a particular resource or set of
                resources. \n Populated by the system. Read-only. Value must be treated
                as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
              type: string
            selfLink:
              description: "SelfLink is a URL representing this object. Populated
                by the system. Read-only. \n DEPRECATED Kubernetes will stop propagating
                this field in 1.20 release and the field is planned to be removed
                in 1.21 release."
              type: string
            uid:
              description: "UID is the unique in time and space value for this object.
                It is typically generated by the server on successful creation of
                a resource and is not allowed to change on PUT operations. \n Populated
                by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
              type: string
          type: object
        spec:
          description: ModelSpec defines the desired state of the Model resource
          properties:
            bracket:
              description: The bracket of the model when running multi arm bandit
              format: int32
              maximum: 128
              minimum: 0
              type: integer
            budget:
              description: The percent of fidelity of the model. The meaning is based
                on the model configuration. For example fidelity is number of epochs
                in sgd alg Or can be percent of the data in non sgd algorithm.
              format: int32
              maximum: 128
              minimum: 0
              type: integer
            classical:
              description: classic estimator.
              properties:
                algorithmRef:
                  description: ObjectReference contains enough information to let
                    you inspect or modify the referred object.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                parameters:
                  items:
                    description: HyperParameterValue represent a specific value of
                      the learning algorithm hyper-parameter. The value is chosen
                      by the planner
                    properties:
                      name:
                        description: Reference to the name of the hyper parameter.
                        type: string
                      value:
                        description: Value hold the value if  the hyper paramer type
                          is string
                        type: string
                    required:
                    - name
                    - value
                    type: object
                  type: array
              type: object
            confID:
              description: The configuration id allocated to this model in rung 0
              format: int32
              type: integer
            cv:
              description: If true, this is a cross validation model.
              type: boolean
            deep:
              description: Deep net estimator
              properties:
                architecture:
                  description: Architecture is the dnn architue
                  items:
                    properties:
                      inputLayers:
                        description: Input layers are the layer input to this layer
                        items:
                          type: string
                        type: array
                      name:
                        description: Name is the name of the layer
                        type: string
                      parameters:
                        description: Parameters are the hyper parameters of this layer
                        items:
                          properties:
                            name:
                              type: string
                            value:
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      type:
                        description: The type if the layer type
                        type: string
                    required:
                    - inputLayers
                    - name
                    - parameters
                    - type
                    type: object
                  type: array
                batchSize:
                  description: Batch size specify about
                  format: int32
                  type: integer
                epochs:
                  description: Budget size specify about
                  format: int32
                  type: integer
                gpus:
                  description: Gpus denote of gpu for trainer, any number more than
                    1 denote distribute training
                  format: int32
                  type: integer
                isSeq:
                  description: Is this a seq model
                  type: boolean
                loss:
                  description: compile
                  type: string
                type:
                  description: The type of the dnn
                  type: string
                validationSplit:
                  description: ValidationSplit specify about
                  format: int32
                  type: integer
              type: object
            description:
              description: User provided description
              type: string
            ensemble:
              description: Ensemble method for the top 3 models. By default we do
                not use ensembling.
              properties:
                method:
                  description: the ensamble method
                  enum:
                  - none
                  - voting
                  - stacking
                  type: string
                models:
                  description: number of top models.
                  format: int32
                  type: integer
              type: object
            evalMetrics:
              description: Evaluation metrics. If not specified, will be assigned
                based on the task The metrics are evaluated using the final model,
                both on the training set and on the test set
              items:
                enum:
                - accuracy
                - average-precision
                - balanced-accuracy
                - brier-score-loss
                - f1
                - f1-macro
                - f1-micro
                - f1-weighted
                - log-loss
                - precision
                - precision-micro
                - precision-macro
                - precision-weighted
                - recall
                - recall-macro
                - recall-micro
                - recall-weighted
                - auc
                - fp
                - fn
                - tn
                - tp
                - explained_variance
                - mae
                - mse
                - msle
                - median-absolute-error
                - r2
                - adjusted-mutual-info-score
                - adjusted-rand-score
                - completeness-score
                - fowlkes-mallows-score
                - homogeneity-score
                - mutual-info-score
                - normalized-mutual-info-score
                - v-measure-score
                - rmse
                - unknown
                type: string
              type: array
            genProfile:
              description: If true the system should generate profile for the model
              type: boolean
            genReport:
              description: If true, system should generate model report for this configuration
                model
              type: boolean
            objective:
              description: Objective is the metric by which the system compare the
                performance of two model. Each task has its own objective measure.
                If non specify the system will assign a default objective based on
                the task.
              enum:
              - accuracy
              - average-precision
              - balanced-accuracy
              - brier-score-loss
              - f1
              - f1-macro
              - f1-micro
              - f1-weighted
              - log-loss
              - precision
              - precision-micro
              - precision-macro
              - precision-weighted
              - recall
              - recall-macro
              - recall-micro
              - recall-weighted
              - auc
              - fp
              - fn
              - tn
              - tp
              - explained_variance
              - mae
              - mse
              - msle
              - median-absolute-error
              - r2
              - adjusted-mutual-info-score
              - adjusted-rand-score
              - completeness-score
              - fowlkes-mallows-score
              - homogeneity-score
              - mutual-info-score
              - normalized-mutual-info-score
              - v-measure-score
              - rmse
              - unknown
              type: string
            preprocessing:
              description: Represent the preprocessing pipeline of the model
              properties:
                categorical:
                  description: One or more categorical pipelines.
                  items:
                    properties:
                      columns:
                        description: The columns for this pipeline. Use * to denotes
                          all the columns. Must have at least on value.
                        items:
                          type: string
                        type: array
                      encoder:
                        description: CatEncoder
                        enum:
                        - one-hot
                        - count-freq
                        - ordinal-encoder
                        - mean
                        - target
                        - woe
                        - rare-label
                        - binary
                        - label
                        - none
                        - auto
                        type: string
                      imputer:
                        description: Categorical varaible imputer
                        enum:
                        - remove-rows-with-missing-values
                        - mean
                        - median
                        - mode
                        - arbitrary-number
                        - end-tail
                        - random-sample
                        - add-missing-indication
                        - iterative
                        - none
                        - auto
                        type: string
                    type: object
                  type: array
                datatime:
                  description: Specify the column transformation for datetime columns
                  properties:
                    columns:
                      items:
                        type: string
                      type: array
                    expand:
                      type: boolean
                    imputer:
                      description: ==============================================================================
                        Imputator ==============================================================================
                      enum:
                      - remove-rows-with-missing-values
                      - mean
                      - median
                      - mode
                      - arbitrary-number
                      - end-tail
                      - random-sample
                      - add-missing-indication
                      - iterative
                      - none
                      - auto
                      type: string
                  type: object
                featureSelector:
                  description: Feature selector
                  enum:
                  - select-percentile
                  - select-kbest
                  - select-fpr
                  - select-fdr
                  - variance-treshold
                  - none
                  - auto
                  type: string
                numeric:
                  description: Specify the column transformation for numeric columns
                  items:
                    properties:
                      columns:
                        items:
                          type: string
                        type: array
                      imputer:
                        description: Numerical varaible imputer
                        enum:
                        - remove-rows-with-missing-values
                        - mean
                        - median
                        - mode
                        - arbitrary-number
                        - end-tail
                        - random-sample
                        - add-missing-indication
                        - iterative
                        - none
                        - auto
                        type: string
                      outliers:
                        description: Outlier varaible imputer
                        enum:
                        - trim
                        - winsorizer
                        - cap
                        - zero-code
                        - none
                        - auto
                        type: string
                      scaler:
                        description: Scaler varaible imputer
                        enum:
                        - standard
                        - max-abs
                        - min-max
                        - normalizer
                        - robust
                        - none
                        - auto
                        type: string
                    type: object
                  type: array
                reducer:
                  description: Dim reducer
                  enum:
                  - pca
                  - kernel-pca
                  - fast-ica
                  - none
                  - auto
                  type: string
                text:
                  description: Specify the column transformation for text columns
                  properties:
                    columns:
                      items:
                        type: string
                      type: array
                    embedding:
                      type: string
                    encoder:
                      type: string
                    lemma:
                      type: boolean
                    pos:
                      type: boolean
                    stem:
                      type: boolean
                    stopwords:
                      type: boolean
                    tokenizer:
                      type: string
                  type: object
              type: object
            priority:
              description: Priority specify the priority of the model in the training
                queue. The priority is defined in the model study.
              format: int32
              maximum: 10
              minimum: 1
              type: integer
            publish:
              description: If true, the system should wrap this model in a prediction
                server container and push it to the registry.
              type: boolean
            rung:
              description: The rung of the model
              format: int32
              maximum: 128
              minimum: 0
              type: integer
            saveTrainedModel:
              description: Upload the trained model to the cloud
              type: boolean
            seed:
              description: The seed to use for the estimator
              format: float
              type: number
            standalone:
              description: If true, this is a standalone model, which can run without
                a study.
              type: boolean
            studyName:
              description: StudyName ref reference the study for this model req
              maxLength: 64
              type: string
            task:
              description: Task is the machine learning task. The task is generated
                from the study task This is a required field.
              enum:
              - binary-classification
              - multi-classification
              - multi-label-classification
              - text-classification
              - regression
              - forecasting
              - clustering
              - recommendation
              - outlier-detection
              - novelty-detection
              - topic-modeling
              - auto
              - unknown
              type: string
            trainerName:
              description: The class of the trainers classes for training. Trainer
                classes are defined in the catalog.
              type: string
            versionName:
              description: ServingSiteName is a reference to the product version of
                this model. This value is based on the study product version
              type: string
          required:
          - task
          type: object
        status:
          description: ModelStatus defines the observed state of the Model
          properties:
            best:
              description: ReportedToPlanner specify if this model was reported to
                planner after training
              type: boolean
            conditions:
              items:
                description: DeploymentCondition describes the state of a deployment
                  at a certain point.
                properties:
                  lastTransitionTime:
                    description: Last time the condition transitioned from one status
                      to another.
                    format: date-time
                    type: string
                  message:
                    description: A human readable message indicating details about
                      the transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, AutoScaler.
                    type: string
                  type:
                    description: Type of account condition.
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            cost:
              description: The cost of the model
              format: float
              type: number
            cvScore:
              description: Cross validation score using on the training set.
              format: float
              type: number
            endTestTime:
              description: Represents time when the model ended testing be set in
                happens-before order across separate operations. It is represented
                in RFC3339 form and is in UTC.
              format: date-time
              type: string
            endTime:
              description: Represent the time that the model is marked as ready
              format: date-time
              type: string
            endTrainTime:
              description: Represents time when the model ended training
              format: date-time
              type: string
            error:
              description: Error during reconciliation
              properties:
                message:
                  description: error message
                  type: string
                occurredAt:
                  description: time of error
                  format: date-time
                  type: string
              type: object
            imageName:
              description: The image name of the model
              type: string
            labelsEncoderUri:
              description: The URI of the label encoder job lib
              type: string
            logsUri:
              description: The URI of the log file
              type: string
            manifestUri:
              description: The URI of the manifest in the product bucket.
              type: string
            phase:
              description: The phase of the model
              type: string
            profileUri:
              description: A reference to the visualization uri which were produce
                during processing
              type: string
            reportName:
              description: Reference to the model report
              type: string
            retryAttempts:
              description: Retry attempt is the number of training retry for this
                model, if we fail 5 times, we would free the model and the trainer.
              format: int32
              type: integer
            startTestTime:
              description: Represents time when the model started test on a trainer
                It is not guaranteed to be set in happens-before order across separate
                operations. It is represented in RFC3339 form and is in UTC.
              format: date-time
              type: string
            startTime:
              description: Represents time when the model is first handled by the
                model controller
              format: date-time
              type: string
            startTrainTime:
              description: Represents time when the model started training on a trainer
              format: date-time
              type: string
            testResult:
              description: Training on the full training set, evaluating on the training
                set.
              items:
                description: Represent a value for a specific metric
                properties:
                  metric:
                    description: The metric type name (e.g. F1 / Accuracy)
                    enum:
                    - accuracy
                    - average-precision
                    - balanced-accuracy
                    - brier-score-loss
                    - f1
                    - f1-macro
                    - f1-micro
                    - f1-weighted
                    - log-loss
                    - precision
                    - precision-micro
                    - precision-macro
                    - precision-weighted
                    - recall
                    - recall-macro
                    - recall-micro
                    - recall-weighted
                    - auc
                    - fp
                    - fn
                    - tn
                    - tp
                    - explained_variance
                    - mae
                    - mse
                    - msle
                    - median-absolute-error
                    - r2
                    - adjusted-mutual-info-score
                    - adjusted-rand-score
                    - completeness-score
                    - fowlkes-mallows-score
                    - homogeneity-score
                    - mutual-info-score
                    - normalized-mutual-info-score
                    - v-measure-score
                    - rmse
                    - unknown
                    type: string
                  value:
                    description: The value for this model
                    format: float
                    type: number
                type: object
              type: array
            testScore:
              description: Training on the full training set, Evaluating on the test
                set
              format: float
              type: number
            trainResult:
              description: Training on the full training set, evaluating on the training
                set.
              items:
                description: Represent a value for a specific metric
                properties:
                  metric:
                    description: The metric type name (e.g. F1 / Accuracy)
                    enum:
                    - accuracy
                    - average-precision
                    - balanced-accuracy
                    - brier-score-loss
                    - f1
                    - f1-macro
                    - f1-micro
                    - f1-weighted
                    - log-loss
                    - precision
                    - precision-micro
                    - precision-macro
                    - precision-weighted
                    - recall
                    - recall-macro
                    - recall-micro
                    - recall-weighted
                    - auc
                    - fp
                    - fn
                    - tn
                    - tp
                    - explained_variance
                    - mae
                    - mse
                    - msle
                    - median-absolute-error
                    - r2
                    - adjusted-mutual-info-score
                    - adjusted-rand-score
                    - completeness-score
                    - fowlkes-mallows-score
                    - homogeneity-score
                    - mutual-info-score
                    - normalized-mutual-info-score
                    - v-measure-score
                    - rmse
                    - unknown
                    type: string
                  value:
                    description: The value for this model
                    format: float
                    type: number
                type: object
              type: array
            trainScore:
              description: Training on the full training set, Evaluating on the training
                set
              format: float
              type: number
            weightsUri:
              description: The URI of the model file
              type: string
          required:
          - imageName
          type: object
      required:
      - spec
      type: object
  versions:
  - name: v1alpha1
    served: true
    storage: true
