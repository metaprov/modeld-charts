
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: automlruns.training.modeld.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=="Ready")].status
    name: Ready
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  - JSONPath: .spec.dataProductName
    name: Data Product
    type: string
  - JSONPath: .spec.dataProductVersionName
    name: Version
    type: string
  - JSONPath: .status.datasetName
    name: Dataset
    type: string
  - JSONPath: .status.studyName
    name: Study
    type: string
  - JSONPath: .status.predictorName
    name: Predictor
    type: string
  - JSONPath: .status.phase
    name: Status
    type: string
  group: training.modeld.io
  names:
    categories:
    - training
    - modeld
    - all
    kind: AutoMLRun
    plural: automlruns
    shortNames:
    - ar
    singular: automlrun
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: AutoMLRun represent am automatic run of the model creation
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          description: ObjectMeta is metadata that all persisted resources must have,
            which includes all objects users must create.
          properties:
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with
                a resource that may be set by external tools to store and retrieve
                arbitrary metadata. They are not queryable and should be preserved
                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
            clusterName:
              description: The name of the cluster which the object belongs to. This
                is used to distinguish resources with same name and namespace in different
                clusters. This field is not set anywhere right now and apiserver is
                going to ignore it if set in create or update request.
              type: string
            creationTimestamp:
              description: "CreationTimestamp is a timestamp representing the server
                time when this object was created. It is not guaranteed to be set
                in happens-before order across separate operations. Clients may not
                set this value. It is represented in RFC3339 form and is in UTC. \n
                Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
              format: date-time
              type: string
            deletionGracePeriodSeconds:
              description: Number of seconds allowed for this object to gracefully
                terminate before it will be removed from the system. Only set when
                deletionTimestamp is also set. May only be shortened. Read-only.
              format: int64
              type: integer
            deletionTimestamp:
              description: "DeletionTimestamp is RFC 3339 date and time at which this
                resource will be deleted. This field is set by the server when a graceful
                deletion is requested by the user, and is not directly settable by
                a client. The resource is expected to be deleted (no longer visible
                from resource lists, and not reachable by name) after the time in
                this field, once the finalizers list is empty. As long as the finalizers
                list contains items, deletion is blocked. Once the deletionTimestamp
                is set, this value may not be unset or be set further into the future,
                although it may be shortened or the resource may be deleted prior
                to this time. For example, a user may request that a pod is deleted
                in 30 seconds. The Kubelet will react by sending a graceful termination
                signal to the containers in the pod. After that 30 seconds, the Kubelet
                will send a hard termination signal (SIGKILL) to the container and
                after cleanup, remove the pod from the API. In the presence of network
                partitions, this object may still exist after this timestamp, until
                an administrator or automated process can determine the resource is
                fully terminated. If not set, graceful deletion of the object has
                not been requested. \n Populated by the system when a graceful deletion
                is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
              format: date-time
              type: string
            finalizers:
              description: Must be empty before the object is deleted from the registry.
                Each entry is an identifier for the responsible component that will
                remove the entry from the list. If the deletionTimestamp of the object
                is non-nil, entries in this list can only be removed. Finalizers may
                be processed and removed in any order.  Order is NOT enforced because
                it introduces significant risk of stuck finalizers. finalizers is
                a shared field, any actor with permission can reorder it. If the finalizer
                list is processed in order, then this can lead to a situation in which
                the component responsible for the first finalizer in the list is waiting
                for a signal (field value, external system, or other) produced by
                a component responsible for a finalizer later in the list, resulting
                in a deadlock. Without enforced ordering finalizers are free to order
                amongst themselves and are not vulnerable to ordering changes in the
                list.
              items:
                type: string
              type: array
            generateName:
              description: "GenerateName is an optional prefix, used by the server,
                to generate a unique name ONLY IF the Name field has not been provided.
                If this field is used, the name returned to the client will be different
                than the name passed. This value will also be combined with a unique
                suffix. The provided value has the same validation rules as the Name
                field, and may be truncated by the length of the suffix required to
                make the value unique on the server. \n If this field is specified
                and the generated name exists, the server will NOT return a 409 -
                instead, it will either return 201 Created or 500 with Reason ServerTimeout
                indicating a unique name could not be found in the time allotted,
                and the client should retry (optionally after the time indicated in
                the Retry-After header). \n Applied only if Name is not specified.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency"
              type: string
            generation:
              description: A sequence number representing a specific generation of
                the desired state. Populated by the system. Read-only.
              format: int64
              type: integer
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize
                and categorize (scope and select) objects. May match selectors of
                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            managedFields:
              description: ManagedFields maps workflow-id and version to the set of
                fields that are managed by that workflow. This is mostly for internal
                housekeeping, and users typically shouldn't need to set or understand
                this field. A workflow can be the user's name, a controller's name,
                or the name of a specific apply path like "ci-cd". The set of fields
                is always in the version that the workflow used when modifying the
                object.
              items:
                description: ManagedFieldsEntry is a workflow-id, a FieldSet and the
                  group version of the resource that the fieldset applies to.
                properties:
                  apiVersion:
                    description: APIVersion defines the version of this resource that
                      this field set applies to. The format is "group/version" just
                      like the top-level APIVersion field. It is necessary to track
                      the version of a field set because it cannot be automatically
                      converted.
                    type: string
                  fieldsType:
                    description: 'FieldsType is the discriminator for the different
                      fields format and version. There is currently only one possible
                      value: "FieldsV1"'
                    type: string
                  fieldsV1:
                    description: FieldsV1 holds the first JSON version format as described
                      in the "FieldsV1" type.
                    type: object
                  manager:
                    description: Manager is an identifier of the workflow managing
                      these fields.
                    type: string
                  operation:
                    description: Operation is the type of operation which lead to
                      this ManagedFieldsEntry being created. The only valid values
                      for this field are 'Apply' and 'Update'.
                    type: string
                  time:
                    description: Time is timestamp of when these fields were set.
                      It should always be empty if Operation is 'Apply'
                    format: date-time
                    type: string
                type: object
              type: array
            name:
              description: 'Name must be unique within a namespace. Is required when
                creating resources, although some resources may allow a client to
                request the generation of an appropriate name automatically. Name
                is primarily intended for creation idempotence and configuration definition.
                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            namespace:
              description: "Namespace defines the space within each name must be unique.
                An empty namespace is equivalent to the \"default\" namespace, but
                \"default\" is the canonical representation. Not all objects are required
                to be scoped to a namespace - the value of this field for those objects
                will be empty. \n Must be a DNS_LABEL. Cannot be updated. More info:
                http://kubernetes.io/docs/user-guide/namespaces"
              type: string
            ownerReferences:
              description: List of objects depended by this object. If ALL objects
                in the list have been deleted, this object will be garbage collected.
                If this object is managed by a controller, then an entry in this list
                will point to this controller, with the controller field set to true.
                There cannot be more than one managing controller.
              items:
                description: OwnerReference contains enough information to let you
                  identify an owning object. An owning object must be in the same
                  namespace as the dependent, or be cluster-scoped, so there is no
                  namespace field.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  blockOwnerDeletion:
                    description: If true, AND if the owner has the "foregroundDeletion"
                      finalizer, then the owner cannot be deleted from the key-value
                      store until this reference is removed. Defaults to false. To
                      set this field, a user needs "delete" permission of the owner,
                      otherwise 422 (Unprocessable Entity) will be returned.
                    type: boolean
                  controller:
                    description: If true, this reference points to the managing controller.
                    type: boolean
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                    type: string
                required:
                - apiVersion
                - kind
                - name
                - uid
                type: object
              type: array
            resourceVersion:
              description: "An opaque value that represents the internal version of
                this object that can be used by clients to determine when objects
                have changed. May be used for optimistic concurrency, change detection,
                and the watch operation on a resource or set of resources. Clients
                must treat these values as opaque and passed unmodified back to the
                server. They may only be valid for a particular resource or set of
                resources. \n Populated by the system. Read-only. Value must be treated
                as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
              type: string
            selfLink:
              description: "SelfLink is a URL representing this object. Populated
                by the system. Read-only. \n DEPRECATED Kubernetes will stop propagating
                this field in 1.20 release and the field is planned to be removed
                in 1.21 release."
              type: string
            uid:
              description: "UID is the unique in time and space value for this object.
                It is typically generated by the server on successful creation of
                a resource and is not allowed to change on PUT operations. \n Populated
                by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
              type: string
          type: object
        spec:
          description: AutoMLRunSpec define the desired state of the AutoMLRun resource.
          properties:
            accessMethod:
              description: If using existing schema, use the schema, name, else specify
                the name for the new schema.
              type: string
            autoScale:
              description: If true will
              type: boolean
            dataProductName:
              description: Data product name, if not defined, if not defined set to
                generic product name
              type: string
            dataProductVersionName:
              description: Data product version, if not defined set to generic product
                version.
              type: string
            folds:
              description: Folds
              format: int32
              type: integer
            maxModels:
              description: Max training time
              format: int32
              type: integer
            maxTime:
              description: Max training time
              format: int32
              type: integer
            minScore:
              description: Min score
              format: float
              type: number
            objective:
              description: The task objective. this is how models will be scored.
              enum:
              - accuracy
              - average-precision
              - balanced-accuracy
              - brier-score-loss
              - f1
              - f1-macro
              - f1-micro
              - f1-weighted
              - log-loss
              - precision
              - precision-micro
              - precision-macro
              - precision-weighted
              - recall
              - recall-macro
              - recall-micro
              - recall-weighted
              - auc
              - fp
              - fn
              - tn
              - tp
              - explained_variance
              - mae
              - mse
              - msle
              - median-absolute-error
              - r2
              - adjusted-mutual-info-score
              - adjusted-rand-score
              - completeness-score
              - fowlkes-mallows-score
              - homogeneity-score
              - mutual-info-score
              - normalized-mutual-info-score
              - v-measure-score
              - rmse
              - unknown
              type: string
            path:
              description: The location of the data in the cloud
              type: string
            preprocessorName:
              description: Preprocessor Name
              type: string
            schemaName:
              description: If using existing schema, use the schema, name, else specify
                the name for the new schema.
              type: string
            schemaSpec:
              description: The spec of the schema, if none, the runner will infer
                the schema, and will create a new schema with the schema name.
              properties:
                columns:
                  description: Columns contain the attributes of the schema.
                  items:
                    properties:
                      datatype:
                        description: Type specify the data type of the attribute required
                        enum:
                        - number
                        - number-list
                        - categorical
                        - categorical-list
                        - datetime
                        - string
                        - string-list
                        - useless
                        - image
                        - video
                        - audio
                        type: string
                      description:
                        description: Description is a description of the feature
                        type: string
                      enum:
                        description: Enum
                        items:
                          type: string
                        type: array
                      example:
                        description: Example
                        type: string
                      exclusiveMaximum:
                        description: ExclusiveMaximum
                        type: boolean
                      exclusiveMinimum:
                        description: ExclusiveMinimum
                        type: boolean
                      externalDocs:
                        description: External Docs
                        type: string
                      featureName:
                        description: Name specify the name of the feature, if this
                          attribute comes from a feature
                        type: string
                      format:
                        description: DataFormat is the domain of the column. A domain
                          constrain the set of values.
                        enum:
                        - url
                        - path
                        - password
                        - time
                        - count
                        - interval
                        - nominal
                        - email
                        - creditCard
                        - uuid
                        - uuid5
                        - uuid
                        - base64
                        - latitude
                        - longtitude
                        - dns
                        - ip4
                        - ip6
                        - ssn
                        - alpha
                        - alphanumeric
                        - none
                        - unknown
                        type: string
                      ignore:
                        description: Ignore specify if the attribute should be ignored
                          when building the model default is false
                        type: boolean
                      label:
                        description: Label should be true if this attribute is the
                          predictable target Default is false
                        type: boolean
                      maxItems:
                        description: Max Items in the data in case of a list
                        format: int32
                        type: integer
                      maxLength:
                        description: MaxLength
                        format: int32
                        type: integer
                      maximum:
                        description: MaximumFloat
                        format: float
                        type: number
                      minItems:
                        description: Min Items in the data in case of a list.
                        format: int32
                        type: integer
                      minLength:
                        description: MinLength
                        format: int32
                        type: integer
                      minimum:
                        description: MinimumFloat
                        format: float
                        type: number
                      multipleOf:
                        description: MultipleOf
                        format: int32
                        type: integer
                      name:
                        description: Name specify the name of the attribute required
                        maxLength: 512
                        minLength: 1
                        type: string
                      nullable:
                        description: Nullable indicates if a column can contain string
                          Default is false
                        type: boolean
                      pattern:
                        description: Pattern Default is empty
                        type: string
                      pk:
                        description: PrimaryKey denotes if this column is part of
                          the file key.
                        type: boolean
                      required:
                        description: Required
                        type: boolean
                      title:
                        description: Title
                        type: string
                      transformerHint:
                        description: Preprocessor hint constrain the transformer Default
                          is empty
                        type: string
                      uniqueItems:
                        description: Enforce that all the items in the list are unique
                        type: boolean
                    required:
                    - datatype
                    - name
                    type: object
                  type: array
                description:
                  description: User provided description Default is empty
                  maxLength: 512
                  type: string
                versionName:
                  description: VersionName is a reference to the product version.
                    required
                  maxLength: 64
                  minLength: 1
                  type: string
              type: object
            stratify:
              description: Do we do stratify split.
              type: boolean
            targetColumn:
              description: Target column. If not defined we will use the last column.
              type: string
            task:
              description: The machine learning class.
              enum:
              - binary-classification
              - multi-classification
              - multi-label-classification
              - text-classification
              - regression
              - forecasting
              - clustering
              - recommendation
              - outlier-detection
              - novelty-detection
              - topic-modeling
              - auto
              - unknown
              type: string
            trainTestSplit:
              description: Train test split
              format: int32
              type: integer
            trainers:
              description: Folds
              format: int32
              type: integer
          type: object
        status:
          description: AutoMLRunStatus define the observed state of the pipeline
          properties:
            bestModelName:
              description: The selected model name.
              type: string
            bestPreprocessorName:
              description: Preprocessor name.
              type: string
            cols:
              description: the dataset columns, assigned from the dataset.
              format: int32
              type: integer
            conditions:
              items:
                description: AutoMLRunCondition describes the state of a pipeline
                  at a certain point.
                properties:
                  lastTransitionTime:
                    description: Last time the condition transitioned from one status
                      to another.
                    format: date-time
                    type: string
                  message:
                    description: A human readable message indicating details about
                      the transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, AutoScaler.
                    type: string
                  type:
                    description: Type of account condition.
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            cvScore:
              description: Score assigned from the best model
              format: float
              type: number
            datasetName:
              description: the generated dataset name
              type: string
            endTime:
              description: The run end time. The run ends when the last object is
                finished.
              format: date-time
              type: string
            error:
              description: Error during reconciliation
              properties:
                message:
                  description: error message
                  type: string
                occurredAt:
                  description: time of error
                  format: date-time
                  type: string
              type: object
            estimator:
              description: The best estimator, taken from the best model
              properties:
                algorithmRef:
                  description: ObjectReference contains enough information to let
                    you inspect or modify the referred object.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                parameters:
                  items:
                    description: HyperParameterValue represent a specific value of
                      the learning algorithm hyper-parameter. The value is chosen
                      by the planner
                    properties:
                      name:
                        description: Reference to the name of the hyper parameter.
                        type: string
                      value:
                        description: Value hold the value if  the hyper paramer type
                          is string
                        type: string
                    required:
                    - name
                    - value
                    type: object
                  type: array
              type: object
            flatFileName:
              description: the generate flat file name
              type: string
            imageRepoName:
              description: the name of the image repository
              type: string
            phase:
              description: The phase of the auto ml run
              type: string
            predictorName:
              description: the generated predictor name
              type: string
            rows:
              description: the rows in the datasets. Assigned from the dataset
              format: int32
              type: integer
            schemaName:
              description: the generated schema name
              type: string
            startTime:
              description: The run start time The run starts when we create the first
                object
              format: date-time
              type: string
            studyName:
              description: the generate study name
              type: string
            testResult:
              description: Scores assigned from the best model
              items:
                description: Represent a value for a specific metric
                properties:
                  metric:
                    description: The metric type name (e.g. F1 / Accuracy)
                    enum:
                    - accuracy
                    - average-precision
                    - balanced-accuracy
                    - brier-score-loss
                    - f1
                    - f1-macro
                    - f1-micro
                    - f1-weighted
                    - log-loss
                    - precision
                    - precision-micro
                    - precision-macro
                    - precision-weighted
                    - recall
                    - recall-macro
                    - recall-micro
                    - recall-weighted
                    - auc
                    - fp
                    - fn
                    - tn
                    - tp
                    - explained_variance
                    - mae
                    - mse
                    - msle
                    - median-absolute-error
                    - r2
                    - adjusted-mutual-info-score
                    - adjusted-rand-score
                    - completeness-score
                    - fowlkes-mallows-score
                    - homogeneity-score
                    - mutual-info-score
                    - normalized-mutual-info-score
                    - v-measure-score
                    - rmse
                    - unknown
                    type: string
                  value:
                    description: The value for this model
                    format: float
                    type: number
                type: object
              type: array
            testScore:
              description: Score assigned from the best model
              format: float
              type: number
            totalModels:
              description: Total number of models
              format: int32
              type: integer
            trainResult:
              description: Scores assigned from the best model
              items:
                description: Represent a value for a specific metric
                properties:
                  metric:
                    description: The metric type name (e.g. F1 / Accuracy)
                    enum:
                    - accuracy
                    - average-precision
                    - balanced-accuracy
                    - brier-score-loss
                    - f1
                    - f1-macro
                    - f1-micro
                    - f1-weighted
                    - log-loss
                    - precision
                    - precision-micro
                    - precision-macro
                    - precision-weighted
                    - recall
                    - recall-macro
                    - recall-micro
                    - recall-weighted
                    - auc
                    - fp
                    - fn
                    - tn
                    - tp
                    - explained_variance
                    - mae
                    - mse
                    - msle
                    - median-absolute-error
                    - r2
                    - adjusted-mutual-info-score
                    - adjusted-rand-score
                    - completeness-score
                    - fowlkes-mallows-score
                    - homogeneity-score
                    - mutual-info-score
                    - normalized-mutual-info-score
                    - v-measure-score
                    - rmse
                    - unknown
                    type: string
                  value:
                    description: The value for this model
                    format: float
                    type: number
                type: object
              type: array
            trainScore:
              description: Score assigned from the best model
              format: float
              type: number
          type: object
      required:
      - spec
      type: object
  versions:
  - name: v1alpha1
    served: true
    storage: true
